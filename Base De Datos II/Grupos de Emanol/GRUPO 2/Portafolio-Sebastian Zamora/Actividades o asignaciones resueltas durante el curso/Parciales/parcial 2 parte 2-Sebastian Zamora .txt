SEBASTIAN ZAMORA 20-15-4392
------------------------------------Parte #1
Create table AVION (
	 Piso Number not null,
	ID_Avion Number  not Null,
	Asiento Number not null,
	Clase Number not null,
        Disponible varchar2 (20)
	Costraint t_avion primary key(piso,asiento, clase)
        );

Declare 

v_Piso AVION.Piso%TYPE;
v_Asiento Asiento.Piso%TYPE;
v_Clase	Clase.Piso%TYPE;
v_Disponible	Disponible.Piso%TYPE default'S';

	BEGIN 
		FOR v IN 1..3 LOOP
		IF v = 1 THEN
		FOR v_asiento IN 1..216 LOOP
		v_disponible := ‘& v_disponible’;
		INSERT INTO avion (piso,asiento,clase,disponible)
		VALUES(v, p_asiento, 4, p_disponible);
		END LOOP;
		ELSEIF v = 2 THEN
		FOR v_asiento IN 217..236 LOOP
		v_disponible := ‘& v_disponible’;
		INSERT INTO avion (piso,asiento,clase,disponible)
		VALUES(v, p_asiento, 2, p_disponible);
		END LOOP;
		FOR v_asiento IN 237..277 LOOP
		v_disponible := ‘& v_disponible’;
		INSERT INTO avion (piso,asiento,clase,disponible)
		VALUES(v, p_asiento, 3, p_disponible);
		END LOOP;
		ELSE
		FOR v_asiento IN 278..288 LOOP
	v_disponible := ‘& v_disponible’;
			INSERT INTO avion (piso,asiento,clase,disponible)
				VALUES(v, p_asiento, 1, p_disponible);
			END LOOP;
		END IF;
	END LOOP;
	EXCEPTION	
	WHEN DUP_VAL_ON_INDEX THEN
	DBMS.OUTPUT.PUT_LINE := ‘Avion ya existente’;
	WHEN OTHER THEN
	DBMS.OUTPUT.PUT_LINE := ‘No se creo el registro”;
COMMIT;
END;

--------------------------------------------------------------Parte #2
Create table habitaciones (
	id_cadena Number not null,
        piso Number not null,
	habitacion varchar2 (2),
	tipo varchar(10) null default 'Doble' check('Individual', 'Doble', 'Suite'),
	Primary key (piso, habitacion),
	Foreign Key (id_cadena) References estadisticahotel (id_cadena)
        );

Create table reservas(
	piso number not null,
	habitacion varchar2 (2),
	fechaentrega Date null default sysdate,
	noches number not null,
	primary key (piso, habitacion) references habitaciones(piso, habitacion)
	);

Create temporadas(
	nombre varchar(10) not null,
	mesinicio number not null,
	diainicio number not null,
	mesfinalizacion number not null,
	dia_finalizacion number not null
	Primary key (nombre,mesinicio,diainicio)
	);
Create estadisticahotel(
	id_cadena number,
	nombre varchar2(50),
	habitacionesocupadas number,
	habitacionesreservadas number,
	habitacionesdisponibles number,
	habitacionesreservadas number,
	Primary key (id_cadena)
	);

CREATE OR REPLACE PROCEDURE add_temporadas(
p_nombre temporadas.nombre%TYPE,
p_mesinicio temporadas.mesinicio%TYPE,
p_diainicio temporadas.diainicio%TYPE,
p_mesfinalizacion temporadas.mesfinalizacion%TYPE,
p_dia_finalizacion temporadas.dia_finalizacion%TYPE,
p_error out varchar2)AS
BEGIN
p_error :='Registro Creado'
INSERT INTO temporadas (nombre, mesinicio, diainicio, mesfinalizacion, dia_finalizacion)
VALUES(p_nombre,p_mesinicio,p_diainicio,p_mesfinalizacion,p_dia_finalizacion);
EXCEPTION
WHEN DUP_VAL_ON_INDEX THEN
p_error:='temporada ya existe';
WHEN OTHERS THEN
p_error:='No se creo el registro';
COMMIT;
END add_temporadas;
/
-----Temporadas
DECLARE 
	v_error varchar2(100);
BEGIN 
	Add_temporadas('Alta',6,1,8,30, v_error);
	Add_temporadas('Media',1,1,31,5, v_error);
	Add_temporadas('Baja',1,9,31,12, v_error);
	dbms_output.put_line(v_error);
END;


------D	
CREATE OR REPLACE FUNCTION habitac_dispo (
habitacion   habitaciones.habitacion%TYPE,
habitocup   estadisticashotel. habitocup %TYPE
)
RETURN NUMBER AS
BEGIN
    RUTURN habitaciones - habitocup;
END habitac_dispo;