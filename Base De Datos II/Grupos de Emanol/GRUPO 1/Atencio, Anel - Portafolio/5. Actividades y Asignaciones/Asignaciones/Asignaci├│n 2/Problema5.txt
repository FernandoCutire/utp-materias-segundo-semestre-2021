----------------------------------------------------------------------------------------------- PPT 19

create table registered_students (
    student_id number not null,
    department varchar2(30) not null,
    course varchar2(20) not null
);

-- Programa del PPT de la Página 19
set serveroutput on;
DECLARE
    /* Declaración de variables para almacenar información acerca de los estudiantes 
    que cursan la especialidad de Historia */
    v_StudentID students.studentid%TYPE;
    v_FirstName students.firstname%TYPE;
    v_LastName students.lastname%TYPE;
    -- Cursor para recuperar la informacion sobre los estudiantes de Historia
    CURSOR c_HistoryStudents IS
    SELECT studentid, firstname, lastname
    FROM students
    WHERE major = 'Historia';
    
BEGIN
    --Abre el cursor e inicializa el conjunto activo
    OPEN c_HistoryStudents;
    LOOP
        -- Recupera la información del siguiente estudiante
        FETCH c_HistoryStudents INTO v_StudentID, v_FirstName, v_LastName ;
        --Salida del bucle cuando no hay más filas por recuperar
        EXIT WHEN c_HistoryStudents%NOTFOUND ;
        
        INSERT INTO registered_students (student_id, department, course)
        VALUES ( v_StudentID, 'Ciencias Sociales', 'Historia');
        
        INSERT INTO temp_table ( id_col, char_col)
        VALUES ( v_studentID, v_FirstName || ' '|| v_LastName);
    END LOOP;
    -- Libera los recursos utilizados por el curso
    CLOSE c_HistoryStudents;
    -- Confirmamos el trabajo
    COMMIT;
END;

----------------------------------------------------------------------------------------------------- PPT 20

DECLARE
	/* Declaración de variables para almacenar información acerca de los estudiantes 
    que cursan la especialidad de Historia */
	v_StudentID students.studentid%TYPE;
	v_FirstName students.firstname%TYPE;
	v_LastName students.lastname%TYPE;
	-- Cursor para recuperar la información sobre los estudiantes de Historia
	CURSOR c_HistoryStudents IS
		SELECT studentid, firstname, lastname
		FROM students
		WHERE major = 'Historia';
BEGIN
	-- Abre el cursor e inicializa el conjunto activo
	OPEN c_HistoryStudents;
	LOOP
		-- Recupera la información del siguiente estudiante
		FETCH c_HistoryStudents INTO v_StudentID, v_FirstName, v_LastName ;
		INSERT INTO registered_students (student_id, department, course)
		VALUES ( v_StudentID, 'Ciencias Sociales', 'Historia');
		INSERT INTO temp_table (id_col, char_col)
		VALUES ( v_studentID, v_FirstName || ' '|| v_LastName);
		-- Salida del bucle cuando no hay más filas por recuperar
		EXIT WHEN c_HistoryStudents%NOTFOUND ;
	END LOOP;
	-- Libera los recursos utilizados por el curso
	CLOSE c_HistoryStudents;
	-- Confirmamos el trabajo
	COMMIT;
END;

------------------------------------------------------------------------------------------------------ PPT 21

DECLARE
	-- Cursor para recuperar la información sobre los estudiantes de Historia
	CURSOR c_HistoryStudents IS
	SELECT studentid, firstname, lastname
	FROM students
	WHERE major = 'Historia';
	-- Declaración el registro para almacenar información extraída
	v_StudentData c_HistoryStudents%ROWTYPE;
BEGIN
	-- Abre el cursor e inicializa el conjunto activo
	OPEN c_HistoryStudents;
	-- Recupera la información del siguiente estudiante
	FETCH c_HistoryStudents INTO v_StudentData;
	-- El bucle continua mientras haya mas filas que extraer
	WHILE c_HistoryStudents%FOUND LOOP
		INSERT INTO registered_students( student_id, department, course)
		VALUES ( v_StudentData.studentid, 'Ciencias Sociales', 'Historia');
		INSERT INTO temp_table (id_col, char_col)
		VALUES ( v_StudentData.studentid, v_StudentData.firstname || ' '|| v_StudentData.lastname);
		-- Recuperar la fila siguiente. La condición %FOUND se comprobara antes de que el bucle continúe
		FETCH c_HistoryStudents INTO v_StudentData;
	END LOOP;
	-- Libera los recursos utilizados por el curso
	CLOSE c_HistoryStudents;
	-- Confirmamos el trabajo
	COMMIT;
END;

-----------------------------------------------------------------------------------------------------------PPT 22

DECLARE
-- Cursor para recuperar la información sobre los estudiantes de Historia
	CURSOR c_HistoryStudents IS
	SELECT studentid, firstname, lastname
	FROM students
	WHERE major = 'Historia';
BEGIN
	/* Inicio del bucle. Aquí se ejecuta una orden OPEN
	implícita sobre c_HistoryStudents */
	FOR v_StudentData IN c_HistoryStudents LOOP
		INSERT INTO registered_students (student_id, department, course)
		VALUES (v_StudentData.studentid, 'Ciencias Sociales', 'Historia');
		
        INSERT INTO temp_table (id_col, char_col)
		VALUES ( v_StudentData.studentid, v_StudentData.firstname || ' '|| v_StudentData.lastname);
	END LOOP;
	COMMIT;
END;